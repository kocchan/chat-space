= form_for @group do |f| 
  /バリデーションエラーが発生した時の処理
  - if @group.errors.any?
    .chat-group-form__errors
      /.full_messagesで全てのエラーメッセージを配列として取得している
      %h2="#{@group.errors.full_messages.count}件のエラーが発生しました"
    %ul
      /エラーメッセージに対する繰り返し処理
      - @group.errors.full_messages.each do |message|
        %li = message
  /グループ名入力フォーム
  .chat-group-form__field
    .chat-group-form__field--left
      = f.label :name, "グループ名", class: "chat-group-form__label"
      /%label.chat-group-form__label{for: "chat_group_name"} グループ名
    .chat-group-form__field--right
      = f.text_field :name, placeholder: "グループ名を入力してください", class: "chat_group_name chat-group-form__input" 
      /%input#chat_group_name.chat-group-form__input{name: "chat_group[name]", placeholder: "グループ名を入力してください", type: "text"}/
  /チャットメンバーの表示
  .chat-group-form__field
    / この部分はインクリメンタルサーチ(ユーザー追加の非同期化)のときに使用します
    .chat-group-form__field--left
      = f.label "チャットメンバー", class: "chat-group-form__label"
      /%label.chat-group-form__label チャットメンバー
    .chat-group-form__field--right
      / グループ作成機能の追加時はここにcollection_check_boxesの記述を入れてください
      / user_ids=group-userテーブルのuser_idカラムに保存
      / User.all=inputタグの元となるオブジェクト配列。配列の数だけinputタグが作成される
      / ;:id=valueとなる値、:name=テキストとなる値
      = f.collection_check_boxes :user_ids, User.all, :id, :name
      / この部分はインクリメンタルサーチ(ユーザー追加の非同期化)のときにも使用します
  /送信ボタン
  .chat-group-form__field 
    .chat-group-form__field--left
    .chat-group-form__field--right
      = f.submit class: "chat-group-form__action-btn"
      /%input.chat-group-form__action-btn{"data-disable-with":"Save", name: "commit", type: "submit", value: "Save"}/